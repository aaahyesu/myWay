// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String
  followers Int     @default(0)
  isActive  Boolean @default(true)
  posts     Post[]  @relation(name: "posts")
  liked     Liked[]
}

model Post {
  id          Int         @id @default(autoincrement())
  title       String  
  content     String      @db.MediumText
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(name: "posts", fields: [userId], references: [id], onDelete: Cascade)
  userId      Int   
  startAddr   String
  endAddr     String
  place       String
  category    Category?
  
  liked       Liked[]
}

enum Category {
  FoodLover
  WithFriend
  WithFamily
  Vegan
  Hiker
  Study
}

model Place {
  id          Int         @id @default(autoincrement())
  place       String
  description String
  address     String
  startTime   DateTime
  endTime     DateTime
  placeNumber Int
  snsAddr     String?
  
}

model Liked {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  post        Post        @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      Int

  @@index([postId])
  @@index([userId])
}

model Comment {
  id          Int         @id @default(autoincrement())
  
}

// model Commnunity {

// }
